import{C as CSS,p as plt,w as win,a as promiseResolve,d as doc,N as NAMESPACE}from"./index-e0fb4cab.js";const getDynamicImportFunction=e=>`__sc_import_${e.replace(/\s|-/g,"_")}`,patchEsm=()=>CSS&&CSS.supports&&CSS.supports("color","var(--c)")?promiseResolve():import("./css-shim-3b0ed064.js").then(()=>(plt.$cssShim$=win.__cssshim)?plt.$cssShim$.i():0),patchBrowser=()=>{plt.$cssShim$=win.__cssshim;const e=Array.from(doc.querySelectorAll("script")).find(e=>new RegExp(`/${NAMESPACE}(\\.esm)?\\.js($|\\?|#)`).test(e.src)||e.getAttribute("data-stencil-namespace")===NAMESPACE),s=e["data-opts"]||{};return"onbeforeload"in e&&!history.scrollRestoration?{then(){}}:(s.resourcesUrl=new URL(".",new URL(e.getAttribute("data-resources-url")||e.src,win.location.href)).href,patchDynamicImport(s.resourcesUrl,e),win.customElements?promiseResolve(s):import("./dom-3fa9e65e.js").then(()=>s))},patchDynamicImport=(e,s)=>{const t=getDynamicImportFunction(NAMESPACE);try{win[t]=new Function("w",`return import(w);//${Math.random()}`)}catch(r){const o=new Map;win[t]=(r=>{const c=new URL(r,e).href;let n=o.get(c);if(!n){const e=doc.createElement("script");e.type="module",e.crossOrigin=s.crossOrigin,e.src=URL.createObjectURL(new Blob([`import * as m from '${c}'; window.${t}.m = m;`],{type:"application/javascript"})),n=new Promise(s=>{e.onload=(()=>{s(win[t].m),e.remove()})}),o.set(c,n),doc.head.appendChild(e)}return n})}};export{patchEsm as a,patchBrowser as p};